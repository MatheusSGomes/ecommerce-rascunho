// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Office;

#nullable disable

namespace eCommerce.Office.Migrations
{
    [DbContext(typeof(eCommerceOfficeContext))]
    [Migration("20240909170733_AddTurmaSeeds")]
    partial class AddTurmaSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColaboradorTurma", b =>
                {
                    b.Property<int>("ColaboradoresId")
                        .HasColumnType("int");

                    b.Property<int>("TurmasId")
                        .HasColumnType("int");

                    b.HasKey("ColaboradoresId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("ColaboradorTurma");
                });

            modelBuilder.Entity("ColaboradorVeiculo", b =>
                {
                    b.Property<int>("ColaboradoresId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculosId")
                        .HasColumnType("int");

                    b.HasKey("ColaboradoresId", "VeiculosId");

                    b.HasIndex("VeiculosId");

                    b.ToTable("ColaboradorVeiculo");
                });

            modelBuilder.Entity("eCommerce.Office.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colaboradores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "José"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Maria"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Felipe"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Tiago"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Mariana"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Jéssica"
                        });
                });

            modelBuilder.Entity("eCommerce.Office.Models.ColaboradorSetor", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("SetorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DataRegistroCriado")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("ColaboradorId", "SetorId");

                    b.HasIndex("SetorId");

                    b.ToTable("ColaboradoresSetores");

                    b.HasData(
                        new
                        {
                            ColaboradorId = 1,
                            SetorId = 1,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1528), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            ColaboradorId = 2,
                            SetorId = 1,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1590), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            ColaboradorId = 3,
                            SetorId = 2,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1595), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            ColaboradorId = 4,
                            SetorId = 2,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1599), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            ColaboradorId = 5,
                            SetorId = 3,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1604), new TimeSpan(0, -3, 0, 0, 0))
                        },
                        new
                        {
                            ColaboradorId = 6,
                            SetorId = 3,
                            DataRegistroCriado = new DateTimeOffset(new DateTime(2024, 9, 9, 14, 7, 32, 768, DateTimeKind.Unspecified).AddTicks(1607), new TimeSpan(0, -3, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("eCommerce.Office.Models.Setor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Setores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Logística"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Financeiro"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Administrativo"
                        });
                });

            modelBuilder.Entity("eCommerce.Office.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Turma A1"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Turma A2"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Turma A3"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Turma A4"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Turma A5"
                        });
                });

            modelBuilder.Entity("eCommerce.Office.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("ColaboradorTurma", b =>
                {
                    b.HasOne("eCommerce.Office.Models.Colaborador", null)
                        .WithMany()
                        .HasForeignKey("ColaboradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ColaboradorVeiculo", b =>
                {
                    b.HasOne("eCommerce.Office.Models.Colaborador", null)
                        .WithMany()
                        .HasForeignKey("ColaboradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office.Models.Veiculo", null)
                        .WithMany()
                        .HasForeignKey("VeiculosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCommerce.Office.Models.ColaboradorSetor", b =>
                {
                    b.HasOne("eCommerce.Office.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradorSetores")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Office.Models.Setor", "Setor")
                        .WithMany("ColaboradorSetores")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("eCommerce.Office.Models.Colaborador", b =>
                {
                    b.Navigation("ColaboradorSetores");
                });

            modelBuilder.Entity("eCommerce.Office.Models.Setor", b =>
                {
                    b.Navigation("ColaboradorSetores");
                });
#pragma warning restore 612, 618
        }
    }
}
